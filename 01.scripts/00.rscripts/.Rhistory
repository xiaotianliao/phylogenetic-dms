pivot_longer(
cols = -id,  # Pivot all columns except 'id'
names_to = "measurement",
values_to = "value"
) %>%
mutate(
type = ifelse(grepl("FL", measurement), "FL", "KD"),
axis = ifelse(grepl("activity", measurement), "Activity Mean", "Folding Mean")
)
# Print the result
subset_df_long
# Split the data into Activity and Folding datasets
activity_data <- subset_df_long %>%
filter(axis == "Activity Mean") %>%
dplyr::select(id, type, Activity_Mean = value)
folding_data <- subset_df_long %>%
filter(axis == "Folding Mean") %>%
dplyr::select(id, type, Folding_Mean = value)
# Merge the datasets by 'id' and 'type'
subset_df_merged <- activity_data %>%
full_join(folding_data, by = c("id", "type"))
# View the merged data
subset_df_merged
p <- ggplot(subset_df_merged) +
geom_point(aes(y = Folding_Mean, x = Activity_Mean, color = type), alpha = 0.6, shape = 16) +
geom_text(aes(y = Folding_Mean, x = Activity_Mean, label = id), hjust = 0, vjust = 1, size = 3) +
scale_color_brewer(palette = "Dark2") +
theme_classic() +
theme(legend.position = "bottom") +
labs(y = "Folding Mean", x = "Activity Mean",title = "ANC-S5 vs human SRC (58 sub)",)
ggMarginal(p, type = "density", groupColour = TRUE, groupFill = TRUE)
anc_s5_fl_activity_sum <- sum(subset_df$`FL_activity_mean_kcal/mol`)
anc_s5_fl_fold_sum <- sum(subset_df$`FL_folding_mean_kcal/mol`)
anc_s5_fl_activity_sum
anc_s5_fl_fold_sum
# Sample sequence data
toni_src <- "ESLRLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQVMKKLRHEKLVQLYAVVSEEPIYIVTEYMSKGSLLDFLKGETGKYLRLPQLVDMAAQIASGMAYVERMNYVHRDLRAANILVGENLVCKVADFGLARLIEDNEYTARQGAKFPIKWTAPEAALYGRFTIKSDVWSFGILLTELTTKGRVPYPGMVNREVLDQVERGYRMPCPPECPESLHDLMCQCWRKEPEERPTFEYLQAFLED"
anc <- "ESLRLEVKLGQGCFGEVWMGTWNGTTKVAIKTLKPGTMSPEAFLQEAQVMKKLRHEKLVQLYAVVSEEPIYIVTEYMNKGSLLDFLKGEMGKYLRLPQLVDMAAQIASGMAYVERMNYVHRDLRAANILVGENLVCKVADFGLARLIEDNEYTARQGAKFPIKWTAPEAALYGRFTIKSDVWSFGILLTELTTKGRVPYPGMVNREVLDQVERGYRMPCPPECPESLHDLMCQCWRKDPEERPTFEYLQAFLED"
# Compare the sequences
mutations <- c()
min_length <- min(nchar(toni_src), nchar(anc))
for (i in 1:min_length) {
if (substr(toni_src, i, i) != substr(anc, i, i)) {
mutation <- paste0(substr(toni_src, i, i), i, substr(anc, i, i))
mutations <- c(mutations, mutation)
}
}
# Printing the results
mutations
length(mutations)
nchar(anc)
nchar(toni_src)
subset_df <- df_sorted %>% filter(id %in% mutations)
subset_df
intersect(subset_df$id,mutations)
setdiff(mutations,subset_df$id)
# Scatter plot using ggplot2
ggplot(subset_df, aes(x = position, y = `KD_folding_mean_kcal/mol`, color = `KD_activity_mean_kcal/mol`)) +
geom_point() +
geom_text(aes(label = id), hjust = 0, vjust = 1, size = 3) +
scale_color_gradient(low="blue",high="red") +
labs(title = "ANC-S8 vs human SRC (4 sub)",
x = "Position",
y = "KD Folding Mean (kcal/mol)",
color = "KD Activity Mean") +
theme_classic() +
theme(legend.position = "bottom")
# Convert to a long format
subset_df_long <- subset_df %>%
dplyr::select(id, `FL_activity_mean_kcal/mol`, `KD_activity_mean_kcal/mol`, `FL_folding_mean_kcal/mol`, `KD_folding_mean_kcal/mol`) %>%
pivot_longer(
cols = -id,  # Pivot all columns except 'id'
names_to = "measurement",
values_to = "value"
) %>%
mutate(
type = ifelse(grepl("FL", measurement), "FL", "KD"),
axis = ifelse(grepl("activity", measurement), "Activity Mean", "Folding Mean")
)
# Print the result
subset_df_long
# Split the data into Activity and Folding datasets
activity_data <- subset_df_long %>%
filter(axis == "Activity Mean") %>%
dplyr::select(id, type, Activity_Mean = value)
folding_data <- subset_df_long %>%
filter(axis == "Folding Mean") %>%
dplyr::select(id, type, Folding_Mean = value)
# Merge the datasets by 'id' and 'type'
subset_df_merged <- activity_data %>%
full_join(folding_data, by = c("id", "type"))
# View the merged data
subset_df_merged
p <- ggplot(subset_df_merged) +
geom_point(aes(y = Folding_Mean, x = Activity_Mean, color = type), alpha = 0.6, shape = 16) +
geom_text(aes(y = Folding_Mean, x = Activity_Mean, label = id), hjust = 0, vjust = 1, size = 3) +
scale_color_brewer(palette = "Dark2") +
theme_classic() +
theme(legend.position = "bottom") +
labs(y = "Folding Mean", x = "Activity Mean",title = "ANC-S8 vs human SRC (4 sub)",)
ggMarginal(p, type = "density", groupColour = TRUE, groupFill = TRUE)
anc_s8_fl_activity_sum <- sum(subset_df$`FL_activity_mean_kcal/mol`)
anc_s8_fl_fold_sum <- sum(subset_df$`FL_folding_mean_kcal/mol`)
anc_s8_fl_activity_sum
anc_s8_fl_fold_sum
# Sample sequence data
toni_src <- "ESLRLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQVMKKLRHEKLVQLYAVVSEEPIYIVTEYMSKGSLLDFLKGETGKYLRLPQLVDMAAQIASGMAYVERMNYVHRDLRAANILVGENLVCKVADFGLARLIEDNEYTARQGAKFPIKWTAPEAALYGRFTIKSDVWSFGILLTELTTKGRVPYPGMVNREVLDQVERGYRMPCPPECPESLHDLMCQCWRKEPEERPTFEYLQAFLED"
anc <- "ESLRLTRKLGAGQFGEVWAGIWNNTTKVAVKTLKPGTMSPQAFLEEAQIMKKLRHEKLVQLYAVCSEEPIYIVTEFMKHGSLLDYLQKGEGRHLKLPQLIDMAAQIASGMAYLEKQNYIHRDLAARNILVGENYICKVADFGLARLIEDDEYTAREGAKFPIKWTAPEAALYNRFTIKSDVWSFGILLTELVTKGRIPYPGMTNAEVLAQVERGYRMPCPPGCPEPLYQIMLQCWKKDAEERPTFEYLQSVLED"
# Compare the sequences
mutations <- c()
min_length <- min(nchar(toni_src), nchar(anc))
for (i in 1:min_length) {
if (substr(toni_src, i, i) != substr(anc, i, i)) {
mutation <- paste0(substr(toni_src, i, i), i, substr(anc, i, i))
mutations <- c(mutations, mutation)
}
}
# Printing the results
mutations
length(mutations)
nchar(anc)
nchar(toni_src)
subset_df <- df_sorted %>% filter(id %in% mutations)
subset_df
intersect(subset_df$id,mutations)
setdiff(mutations,subset_df$id)
# Scatter plot using ggplot2
ggplot(subset_df, aes(x = position, y = `KD_folding_mean_kcal/mol`, color = `KD_activity_mean_kcal/mol`)) +
geom_point() +
geom_text(aes(label = id), hjust = 0, vjust = 1, size = 3) +
scale_color_gradient(low="blue",high="red") +
labs(title = "ANC-S6 vs human SRC (52 sub)",
x = "Position",
y = "KD Folding Mean (kcal/mol)",
color = "KD Activity Mean") +
theme_classic() +
theme(legend.position = "bottom")
# Convert to a long format
subset_df_long <- subset_df %>%
dplyr::select(id, `FL_activity_mean_kcal/mol`, `KD_activity_mean_kcal/mol`, `FL_folding_mean_kcal/mol`, `KD_folding_mean_kcal/mol`) %>%
pivot_longer(
cols = -id,  # Pivot all columns except 'id'
names_to = "measurement",
values_to = "value"
) %>%
mutate(
type = ifelse(grepl("FL", measurement), "FL", "KD"),
axis = ifelse(grepl("activity", measurement), "Activity Mean", "Folding Mean")
)
# Print the result
subset_df_long
# Split the data into Activity and Folding datasets
activity_data <- subset_df_long %>%
filter(axis == "Activity Mean") %>%
dplyr::select(id, type, Activity_Mean = value)
folding_data <- subset_df_long %>%
filter(axis == "Folding Mean") %>%
dplyr::select(id, type, Folding_Mean = value)
# Merge the datasets by 'id' and 'type'
subset_df_merged <- activity_data %>%
full_join(folding_data, by = c("id", "type"))
# View the merged data
subset_df_merged
p <- ggplot(subset_df_merged) +
geom_point(aes(y = Folding_Mean, x = Activity_Mean, color = type), alpha = 0.6, shape = 16) +
geom_text(aes(y = Folding_Mean, x = Activity_Mean, label = id), hjust = 0, vjust = 1, size = 3) +
scale_color_brewer(palette = "Dark2") +
theme_classic() +
theme(legend.position = "bottom") +
labs(y = "Folding Mean", x = "Activity Mean",title = "ANC-S6 vs human SRC (52 sub)",)
ggMarginal(p, type = "density", groupColour = TRUE, groupFill = TRUE)
anc_s6_fl_activity_sum <- sum(subset_df$`FL_activity_mean_kcal/mol`)
anc_s6_fl_fold_sum <- sum(subset_df$`FL_folding_mean_kcal/mol`)
anc_s6_fl_activity_sum
anc_s6_fl_fold_sum
# Sample sequence data
toni_src <- "ESLRLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQVMKKLRHEKLVQLYAVVSEEPIYIVTEYMSKGSLLDFLKGETGKYLRLPQLVDMAAQIASGMAYVERMNYVHRDLRAANILVGENLVCKVADFGLARLIEDNEYTARQGAKFPIKWTAPEAALYGRFTIKSDVWSFGILLTELTTKGRVPYPGMVNREVLDQVERGYRMPCPPECPESLHDLMCQCWRKEPEERPTFEYLQAFLED"
anc <- "ESLRLEVKLGQGCFGEVWMGTWNGTTKVAIKTLKPGTMSPEAFLQEAQVMKKLRHEKLVQLYAVVSEEPIYIVTEFMNRGSLLDFLKGEMGKYLRLPQLVDMAAQIASGMAYVERMNYVHRDLRAANILVGENLVCKVADFGLARLIEDNEYTARQGAKFPIKWTAPEAALYGRFTIKSDVWSFGILLTELTTKGRVPYPGMVNREVLDQVERGYRMPCPPECPESLHDLMLQCWRKDPEERPTFEYLQAFLED"
# Compare the sequences
mutations <- c()
min_length <- min(nchar(toni_src), nchar(anc))
for (i in 1:min_length) {
if (substr(toni_src, i, i) != substr(anc, i, i)) {
mutation <- paste0(substr(toni_src, i, i), i, substr(anc, i, i))
mutations <- c(mutations, mutation)
}
}
# Printing the results
mutations
length(mutations)
nchar(anc)
nchar(toni_src)
subset_df <- df_sorted %>% filter(id %in% mutations)
subset_df
intersect(subset_df$id,mutations)
setdiff(mutations,subset_df$id)
# Scatter plot using ggplot2
ggplot(subset_df, aes(x = position, y = `KD_folding_mean_kcal/mol`, color = `KD_activity_mean_kcal/mol`)) +
geom_point() +
geom_text(aes(label = id), hjust = 0, vjust = 1, size = 3) +
scale_color_gradient(low="blue",high="red") +
labs(title = "ANC-S7 vs human SRC (7 sub)",
x = "Position",
y = "KD Folding Mean (kcal/mol)",
color = "KD Activity Mean") +
theme_classic() +
theme(legend.position = "bottom")
# Convert to a long format
subset_df_long <- subset_df %>%
dplyr::select(id, `FL_activity_mean_kcal/mol`, `KD_activity_mean_kcal/mol`, `FL_folding_mean_kcal/mol`, `KD_folding_mean_kcal/mol`) %>%
pivot_longer(
cols = -id,  # Pivot all columns except 'id'
names_to = "measurement",
values_to = "value"
) %>%
mutate(
type = ifelse(grepl("FL", measurement), "FL", "KD"),
axis = ifelse(grepl("activity", measurement), "Activity Mean", "Folding Mean")
)
# Print the result
subset_df_long
# Split the data into Activity and Folding datasets
activity_data <- subset_df_long %>%
filter(axis == "Activity Mean") %>%
dplyr::select(id, type, Activity_Mean = value)
folding_data <- subset_df_long %>%
filter(axis == "Folding Mean") %>%
dplyr::select(id, type, Folding_Mean = value)
# Merge the datasets by 'id' and 'type'
subset_df_merged <- activity_data %>%
full_join(folding_data, by = c("id", "type"))
# View the merged data
subset_df_merged
p <- ggplot(subset_df_merged) +
geom_point(aes(y = Folding_Mean, x = Activity_Mean, color = type), alpha = 0.6, shape = 16) +
geom_text(aes(y = Folding_Mean, x = Activity_Mean, label = id), hjust = 0, vjust = 1, size = 3) +
scale_color_brewer(palette = "Dark2") +
theme_classic() +
theme(legend.position = "bottom") +
labs(y = "Folding Mean", x = "Activity Mean",title = "ANC-S7 vs human SRC (7 sub)",)
ggMarginal(p, type = "density", groupColour = TRUE, groupFill = TRUE)
anc_s7_fl_activity_sum <- sum(subset_df$`FL_activity_mean_kcal/mol`)
anc_s7_fl_fold_sum <- sum(subset_df$`FL_folding_mean_kcal/mol`)
anc_s7_fl_activity_sum
anc_s7_fl_fold_sum
anc_as_fl_fold_sum
anc_s1_fl_fold_sum
anc_s3_fl_fold_sum
anc_s5_fl_fold_sum
anc_s7_fl_fold_sum
anc_s8_fl_fold_sum
anc_as_fl_activity_sum
anc_s1_fl_activity_sum
anc_s3_fl_activity_sum
anc_s5_fl_activity_sum
anc_s7_fl_activity_sum
anc_s8_fl_activity_sum
df_sorted
# ANC-AS -> SRC: 84
# ANC-S1 -> SRC: 64
# ANC-S3 -> SRC: 59
# ANC-S5 -> SRC: 58
# ANC-S6 -> SRC: 52
# ANC-S7 -> SRC: 7
# ANC-S8 -> SRC: 4
dist <- c(4,7,52,58,59,64,84)
x_labels <- c("ANC-S8", "ANC-S7", "ANC-S6", "ANC-S5", "ANC-S3", "ANC-S1", "ANC-AS")
activity <- c(anc_s8_fl_activity_sum, anc_s7_fl_activity_sum, anc_s6_fl_activity_sum,
anc_s5_fl_activity_sum, anc_s3_fl_activity_sum, anc_s1_fl_activity_sum, anc_as_fl_activity_sum)
folding <- c(anc_s8_fl_fold_sum, anc_s7_fl_fold_sum, anc_s6_fl_fold_sum,
anc_s5_fl_fold_sum, anc_s3_fl_fold_sum, anc_s1_fl_fold_sum, anc_as_fl_fold_sum)
# Combine into a data frame
data <- data.frame(dist, x_labels, activity, folding)
# Reshape the data to long format
data_long <- data %>%
pivot_longer(cols = c("activity", "folding"),
names_to = "type",
values_to = "value")
# Plot
ggplot(data_long, aes(x = dist, y = value, color = type, shape = type)) +
geom_point(size = 3) +                                      # Use size to make points more visible
geom_line(aes(group = type), linetype = "dashed", color = "grey") +  # Dashed grey line connecting points
scale_x_continuous(breaks = dist, labels = x_labels) +      # Custom x-axis labels
theme_classic() +
labs(x = "Distance", y = "Cumulative ddG", title = "Activity and Folding vs Distance", color = "", shape = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))    # Rotate x-axis labels for better readability
# ANC-AS -> SRC: 84
# ANC-S1 -> SRC: 64
# ANC-S3 -> SRC: 59
# ANC-S5 -> SRC: 58
# ANC-S6 -> SRC: 52
# ANC-S7 -> SRC: 7
# ANC-S8 -> SRC: 4
dist <- c(4,7,52,58,59,64,84)
x_labels <- c("ANC-S8", "ANC-S7", "ANC-S6", "ANC-S5", "ANC-S3", "ANC-S1", "ANC-AS")
activity <- c(anc_s8_fl_activity_sum, anc_s7_fl_activity_sum, anc_s6_fl_activity_sum,
anc_s5_fl_activity_sum, anc_s3_fl_activity_sum, anc_s1_fl_activity_sum, anc_as_fl_activity_sum)
folding <- c(anc_s8_fl_fold_sum, anc_s7_fl_fold_sum, anc_s6_fl_fold_sum,
anc_s5_fl_fold_sum, anc_s3_fl_fold_sum, anc_s1_fl_fold_sum, anc_as_fl_fold_sum)
# Combine into a data frame
data <- data.frame(dist, x_labels, activity, folding)
# Reshape the data to long format
data_long <- data %>%
pivot_longer(cols = c("activity", "folding"),
names_to = "type",
values_to = "value")
# Plot
ggplot(data_long, aes(x = dist, y = value, color = type, shape = type)) +
geom_point(size = 3) +                                      # Use size to make points more visible
geom_line(aes(group = type), linetype = "dashed", color = "grey") +  # Dashed grey line connecting points
scale_x_continuous(breaks = dist, labels = x_labels) +      # Custom x-axis labels
theme_classic() +
labs(x = "Mutational distance from human SRC", y = "Cumulative ddG", title = "Activity and Folding vs Distance", color = "", shape = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))    # Rotate x-axis labels for better readability
# ANC-AS -> SRC: 84
# ANC-S1 -> SRC: 64
# ANC-S3 -> SRC: 59
# ANC-S5 -> SRC: 58
# ANC-S6 -> SRC: 52
# ANC-S7 -> SRC: 7
# ANC-S8 -> SRC: 4
dist <- c(4,7,52,58,59,64,84)
x_labels <- c("ANC-S8", "ANC-S7", "ANC-S6", "ANC-S5", "ANC-S3", "ANC-S1", "ANC-AS")
activity <- c(anc_s8_fl_activity_sum, anc_s7_fl_activity_sum, anc_s6_fl_activity_sum,
anc_s5_fl_activity_sum, anc_s3_fl_activity_sum, anc_s1_fl_activity_sum, anc_as_fl_activity_sum)
folding <- c(anc_s8_fl_fold_sum, anc_s7_fl_fold_sum, anc_s6_fl_fold_sum,
anc_s5_fl_fold_sum, anc_s3_fl_fold_sum, anc_s1_fl_fold_sum, anc_as_fl_fold_sum)
# Combine into a data frame
data <- data.frame(dist, x_labels, activity, folding)
# Reshape the data to long format
data_long <- data %>%
pivot_longer(cols = c("activity", "folding"),
names_to = "type",
values_to = "value")
# Plot
ggplot(data_long, aes(x = dist, y = value, color = type, shape = type)) +
geom_point(size = 3) +                                      # Use size to make points more visible
geom_line(aes(group = type), linetype = "dashed", color = "grey") +  # Dashed grey line connecting points
scale_x_continuous(breaks = dist, labels = x_labels) +      # Custom x-axis labels
theme_classic() +
labs(x = "Mutational distance from human SRC (# of substitutions)", y = "Cumulative ddG", title = "Activity and Folding vs Distance", color = "", shape = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))    # Rotate x-axis labels for better readability
# ANC-AS -> SRC: 84
# ANC-S1 -> SRC: 64
# ANC-S3 -> SRC: 59
# ANC-S5 -> SRC: 58
# ANC-S6 -> SRC: 52
# ANC-S7 -> SRC: 7
# ANC-S8 -> SRC: 4
dist <- c(4,7,52,58,59,64,84)
x_labels <- c("ANC-S8", "ANC-S7", "ANC-S6", "ANC-S5", "ANC-S3", "ANC-S1", "ANC-AS")
activity <- c(anc_s8_fl_activity_sum, anc_s7_fl_activity_sum, anc_s6_fl_activity_sum,
anc_s5_fl_activity_sum, anc_s3_fl_activity_sum, anc_s1_fl_activity_sum, anc_as_fl_activity_sum)
folding <- c(anc_s8_fl_fold_sum, anc_s7_fl_fold_sum, anc_s6_fl_fold_sum,
anc_s5_fl_fold_sum, anc_s3_fl_fold_sum, anc_s1_fl_fold_sum, anc_as_fl_fold_sum)
# Combine into a data frame
data <- data.frame(dist, x_labels, activity, folding)
# Reshape the data to long format
data_long <- data %>%
pivot_longer(cols = c("activity", "folding"),
names_to = "type",
values_to = "value")
# Plot
ggplot(data_long, aes(x = dist, y = value, color = type, shape = type)) +
geom_point(size = 3) +                                      # Use size to make points more visible
geom_line(aes(group = type), linetype = "dashed", color = "grey") +  # Dashed grey line connecting points
scale_x_continuous(breaks = dist, labels = x_labels) +      # Custom x-axis labels
theme_classic() +
labs(x = "Mutational distance from human SRC (# of substitutions)", y = "Cumulative ddG", title = "Activity and Folding vs Distance", color = "", shape = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))    # Rotate x-axis labels for better readability
# ANC-AS -> SRC: 84
# ANC-S1 -> SRC: 64
# ANC-S3 -> SRC: 59
# ANC-S5 -> SRC: 58
# ANC-S6 -> SRC: 52
# ANC-S7 -> SRC: 7
# ANC-S8 -> SRC: 4
dist <- c(4,7,52,58,59,64,84)
x_labels <- c("ANC-S8", "ANC-S7", "ANC-S6", "ANC-S5", "ANC-S3", "ANC-S1", "ANC-AS")
activity <- c(anc_s8_fl_activity_sum, anc_s7_fl_activity_sum, anc_s6_fl_activity_sum,
anc_s5_fl_activity_sum, anc_s3_fl_activity_sum, anc_s1_fl_activity_sum, anc_as_fl_activity_sum)
folding <- c(anc_s8_fl_fold_sum, anc_s7_fl_fold_sum, anc_s6_fl_fold_sum,
anc_s5_fl_fold_sum, anc_s3_fl_fold_sum, anc_s1_fl_fold_sum, anc_as_fl_fold_sum)
# Combine into a data frame
data <- data.frame(dist, x_labels, activity, folding)
# Reshape the data to long format
data_long <- data %>%
pivot_longer(cols = c("activity", "folding"),
names_to = "type",
values_to = "value")
# Plot
ggplot(data_long, aes(x = dist, y = value, color = type, shape = type)) +
geom_point(size = 3) +                                      # Use size to make points more visible
geom_line(aes(group = type), linetype = "dashed", color = "grey") +  # Dashed grey line connecting points
scale_x_continuous(breaks = c(10, 20, 30, 40, 50, 60, 70, 80, dist),  # Add custom ticks and additional ticks
labels = c(10, 20, 30, 40, 50, 60, 70, 80, x_labels)) +  # Labels for the custom distances and extra ticks
theme_classic() +
labs(x = "Mutational distance from human SRC (# of substitutions)", y = "Cumulative ddG", title = "Activity and Folding vs Distance", color = "", shape = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))    # Rotate x-axis labels for better readability
# ANC-AS -> SRC: 84
# ANC-S1 -> SRC: 64
# ANC-S3 -> SRC: 59
# ANC-S5 -> SRC: 58
# ANC-S6 -> SRC: 52
# ANC-S7 -> SRC: 7
# ANC-S8 -> SRC: 4
dist <- c(4,7,52,58,59,64,84)
x_labels <- c("ANC-S8", "ANC-S7", "ANC-S6", "ANC-S5", "ANC-S3", "ANC-S1", "ANC-AS")
activity <- c(anc_s8_fl_activity_sum, anc_s7_fl_activity_sum, anc_s6_fl_activity_sum,
anc_s5_fl_activity_sum, anc_s3_fl_activity_sum, anc_s1_fl_activity_sum, anc_as_fl_activity_sum)
folding <- c(anc_s8_fl_fold_sum, anc_s7_fl_fold_sum, anc_s6_fl_fold_sum,
anc_s5_fl_fold_sum, anc_s3_fl_fold_sum, anc_s1_fl_fold_sum, anc_as_fl_fold_sum)
# Combine into a data frame
data <- data.frame(dist, x_labels, activity, folding)
# Reshape the data to long format
data_long <- data %>%
pivot_longer(cols = c("activity", "folding"),
names_to = "type",
values_to = "value")
# Plot
ggplot(data_long, aes(x = dist, y = value, color = type, shape = type)) +
geom_point(size = 3) +                                      # Use size to make points more visible
geom_line(aes(group = type), linetype = "dashed", color = "grey") +  # Dashed grey line connecting points
scale_x_continuous(breaks = c(5,10,15, 20,25, 30, 35,40, 45,50,55, 60, 65,70, 75,80, dist),  # Add custom ticks and additional ticks
labels = c(5,10,15, 20,25, 30, 35,40, 45,50,55, 60, 65,70, 75,80, x_labels)) +  # Labels for the custom distances and extra ticks
theme_classic() +
labs(x = "Mutational distance from human SRC (# of substitutions)", y = "Cumulative ddG", title = "Activity and Folding vs Distance", color = "", shape = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))    # Rotate x-axis labels for better readability
# ANC-AS -> SRC: 84
# ANC-S1 -> SRC: 64
# ANC-S3 -> SRC: 59
# ANC-S5 -> SRC: 58
# ANC-S6 -> SRC: 52
# ANC-S7 -> SRC: 7
# ANC-S8 -> SRC: 4
dist <- c(4,7,52,58,59,64,84)
x_labels <- c("ANC-S8", "ANC-S7", "ANC-S6", "ANC-S5", "ANC-S3", "ANC-S1", "ANC-AS")
activity <- c(anc_s8_fl_activity_sum, anc_s7_fl_activity_sum, anc_s6_fl_activity_sum,
anc_s5_fl_activity_sum, anc_s3_fl_activity_sum, anc_s1_fl_activity_sum, anc_as_fl_activity_sum)
folding <- c(anc_s8_fl_fold_sum, anc_s7_fl_fold_sum, anc_s6_fl_fold_sum,
anc_s5_fl_fold_sum, anc_s3_fl_fold_sum, anc_s1_fl_fold_sum, anc_as_fl_fold_sum)
# Combine into a data frame
data <- data.frame(dist, x_labels, activity, folding)
# Reshape the data to long format
data_long <- data %>%
pivot_longer(cols = c("activity", "folding"),
names_to = "type",
values_to = "value")
# Plot
ggplot(data_long, aes(x = dist, y = value, color = type, shape = type)) +
geom_point(size = 3) +                                      # Use size to make points more visible
geom_line(aes(group = type), linetype = "dashed", color = "grey") +  # Dashed grey line connecting points
scale_x_continuous(breaks = c(5,10,15, 20,25, 30, 35,40, 45,50,55, 60, 65,70, 75,80, dist),  # Add custom ticks and additional ticks
labels = c(5,10,15, 20,25, 30, 35,40, 45,50,55, 60, 65,70, 75,80, x_labels)) +  # Labels for the custom distances and extra ticks
theme_classic() +
labs(x = "Mutational distance from human SRC (# of substitutions)", y = "Cumulative ddG", title = "Activity and Folding vs Distance", color = "", shape = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))    # Rotate x-axis labels for better readability
View(midpoint_tree)
grep("elegans", midpoint_tree$tip.label, value = TRUE)
source("~/.active-rstudio-document", echo=TRUE)
head(sequences)
output_file <- '/Users/xl7/Documents/0.Projects/02.phylo-dms/00.inputs/04.dlg4_topiary/02.out_asr/dlg_topiary_asr/dlg_topiary_reconstructed_sequences.fasta'
save_sequences(sequences, output_file)
source("~/.active-rstudio-document", echo=TRUE)
library(stringr)
library(ggtree)
library(ggplot2)
library(ape)
library(taxizedb)
library(taxize)
library(phytools)
library(rentrez)
library(data.table)
library(dplyr)
library(viridis)
#######################################################################################
###### RECONSTRUCT SEQUENCES FROM .STATE FILE #########################################
#######################################################################################
# Read the FASTA file and extract the sequence headers
fasta_file <- "/Users/xl7/Documents/0.Projects/02.phylo-dms/00.inputs/04.dlg4_topiary/seed_to_ali/07_alignment_trimmed.fasta"
headers <- readLines(fasta_file)[grepl("^>", readLines(fasta_file))]
# Extract unique identifiers and full names
ids_full_names <- data.frame(
id = str_extract(headers, "(?<=^>)[^|]+"),  # Extracts only the ID without '>'
full_name = str_extract(headers, "(?<=^>)[^|]+\\|[^|]+\\|[^|]+")  # Extracts the full name
)
# Replace spaces with underscores in the full_name column
ids_full_names$full_name <- gsub(" ", "_", ids_full_names$full_name)
# Display the extracted identifiers and full names for debugging
print("Extracted IDs and full names:")
print(ids_full_names)
# Read the tree file
tree_file <- "/Users/xl7/Documents/0.Projects/02.phylo-dms/00.inputs/04.dlg4_topiary/02.out_asr/dlg_topiary_asr/dlg_topiary_asr.treefile"
tree_data <- readLines(tree_file)
# Display the first few lines of the tree data for debugging
print("Original tree data:")
print(head(tree_data))
# Replace the truncated names with the full-length names
for (i in 1:nrow(ids_full_names)) {
# Ensure pattern matches correctly for replacement
pattern <- paste0("\\b", ids_full_names$id[i], "\\b\\|[^:]+")  # Adding word boundaries to ensure precise match
replacement <- ids_full_names$full_name[i]
# Display the pattern and replacement for debugging
print(paste("Replacing pattern:", pattern, "with:", replacement))
# Perform the replacement
tree_data <- str_replace_all(tree_data, pattern, replacement)
}
# Display the modified tree data for debugging
print("Modified tree data:")
print(head(tree_data))
output_tree_file <- "/Users/xl7/Documents/0.Projects/02.phylo-dms/00.inputs/04.dlg4_topiary/02.out_asr/dlg_topiary_asr/updated_tree.treefile"
writeLines(tree_data, output_tree_file)
